name: Spotify Stats Update

on:
  schedule:
    - cron: "0 */6 * * *" # Actualiza cada 6 horas
  workflow_dispatch:

jobs:
  spotify:
    runs-on: ubuntu-latest
    steps:
      - name: Instalar jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Obtener access token de Spotify
        id: spotify_token
        run: |
          RESPONSE=$(curl -s -X POST "https://accounts.spotify.com/api/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=refresh_token" \
            -d "refresh_token=${{ secrets.SPOTIFY_REFRESH_TOKEN }}" \
            -d "client_id=${{ secrets.SPOTIFY_CLIENT_ID }}" \
            -d "client_secret=${{ secrets.SPOTIFY_CLIENT_SECRET }}")
          
          ACCESS_TOKEN=$(echo $RESPONSE | jq -r '.access_token')
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
          echo "Access token generado correctamente."

      - name: Generar estadísticas de Spotify
        uses: SANTONLA/spotify-stats-action@main
        with:
          username: silanton
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
          ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}

      - name: Listar archivos generados
        run: |
          echo "Archivos en el directorio:"
          ls -lah

      - name: Mostrar top tracks y recently played
        run: |
          if [ -f "top_tracks.json" ]; then
            echo "Top Tracks:"
            cat top_tracks.json | jq '.items[] | "\(.name) - \(.artists[0].name)"'
          else
            echo "No se encontró top_tracks.json"
          fi

          if [ -f "recently_played.json" ]; then
            echo "Recently Played:"
            cat recently_played.json | jq '.items[] | "\(.track.name) - \(.track.artists[0].name)"'
          else
            echo "No se encontró recently_played.json"
          fi

      - name: Commit y push de resultados
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Actualización automática de Spotify Stats" || echo "No hay cambios"
          git push


